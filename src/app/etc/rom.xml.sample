<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2013-2014 eBay Enterprise, Inc.

NOTICE OF LICENSE

This source file is subject to the Open Software License (OSL 3.0)
that is bundled with this package in the file LICENSE.md.
It is also available through the world-wide-web at this URL:
http://opensource.org/licenses/osl-3.0.php

@copyright   Copyright (c) 2013-2014 eBay Enterprise, Inc. (http://www.ebayenterprise.com/)
@license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
-->
<config>
    <!--
    Cron Jobs
    -->
    <crontab>
        <jobs>
            <!--
            Order Retry: This job will attempt to resubmit any orders that were unable to be placed due to the
            unavailability of the ROM API.

            Suggested Schedule: Once every fifteen minutes
            -->
            <ebayenterprise_order_create_retry>
                <schedule>
                    <cron_expr>*/15 * * * *</cron_expr>
                </schedule>
            </ebayenterprise_order_create_retry>
            <!--
            Image Export: This job will export image meta data to the Product Hub.

            Suggested Schedule: Once every fifteen minutes
            -->
            <ebayenterprise_productimageexport>
                <schedule>
                    <cron_expr>*/15 * * * *</cron_expr>
                </schedule>
            </ebayenterprise_productimageexport>
            <!--
            AMQP Queue Process: This job will request new messages from the ROM message queues.

            Suggested Schedule: As often as possible
            -->
            <ebayenterprise_amqp_runner_process_queues>
                <schedule>
                    <cron_expr>*/5 * * * *</cron_expr>
                </schedule>
            </ebayenterprise_amqp_runner_process_queues>
        </jobs>
    </crontab>
    <default>
        <eb2ccore>
            <!--
            Shipping Codes: Map Magento shipping methods to ROM shipping codes. Node names must match Magento shipping
            methods. Values must match ROM shipping codes specific to your client implementation, which eBay Enterpise
            will provide to you.
            -->
            <shipmap>
                <flatrate_flatrate>ANY_STD</flatrate_flatrate>
            </shipmap>
        </eb2ccore>
        <ebayenterprise_inventory>
            <details>
                <!-- Template to use to display the estimated delivery date. -->
                <estimated_delivery_template>You can expect to receive your item%s between %s and %s.</estimated_delivery_template>
            </details>
        </ebayenterprise_inventory>
        <ebayenterprise_tax>
            <tax_class>
                <!-- tax class to use for the shipping price group -->
                <shipping>93000</shipping>
            </tax_class>
        </ebayenterprise_tax>
        <!--
        Message Queue: Configuration to fetch messages from the ROM message queue. Unless otherwise noted, the provided
        sample values should suffice for most uses.
        -->
        <ebayenterprise_amqp>
            <general>
                <!--
                Number of Messages to Process: Specify the number of messages to fetch at one time from a single queue.
                -->
                <number_of_messages_to_process>15</number_of_messages_to_process>
            </general>
            <connection>
                <!--
                Connection Type: Specify the type of connection to establish with the AMQP server. The connection type
                must match a connection class in PhpAmqpLib and be supported by the ROM-SDK.

                Currently supported connection types are:
                    - \PhpAmqpLib\Connection\AMQPConnection
                    - \PhpAmqpLib\Connection\AMQPSSLConnection
                -->
                <type>\PhpAmqpLib\Connection\AMQPSSLConnection</type>
                <!--
                Connection Context: Specify additional connection data. Depending on the type of connection being
                established, this may need to include additional child nodes required for creating the connection.

                Connection context can be empty for non-AMQPSSLConnection.
                -->
                <context>
                    <verify_peer>0</verify_peer>
                </context>
                <!--
                Connection Port: Specify the port for the AMQP server.

                For SSL connections, typically 443. For non-SSL connections, typically 5672.
                -->
                <port>443</port>
                <vhost>/</vhost>
                <insist>0</insist>
                <login_method/>
                <locale>en-US</locale>
                <timeout>3</timeout>
                <read_write_timeout>3</read_write_timeout>
            </connection>
            <queue>
                <!--
                Message Queue Names: List the ROM message queues. Queue names containing {store_id} will have the
                placeholder replaced by the current configured store id.
                -->
                <queue_names>
                    <orders>q.Order.Event.{store_id}</orders>
                </queue_names>
                <passive>0</passive>
                <durable>1</durable>
                <exclusive>0</exclusive>
                <auto_delete>0</auto_delete>
                <nowait>0</nowait>
                <binding_nowait>0</binding_nowait>
            </queue>
        </ebayenterprise_amqp>
        <ebayenterprise_creditcard>
            <!--
            Credit Card Tenders: Map Magento credit card types to ROM credit card tender types. Node names must match
            the credit card code as configured in Mage_Payment's etc/config.xml. Values must match credit card tender
            types supported by the ROM payment service.
            -->
            <tender_types>
                <AE>AM</AE>
                <DI>DC</DI>
                <MC>MC</MC>
                <VI>VC</VI>
            </tender_types>
        </ebayenterprise_creditcard>
        <ebayenterprise_order>
            <create>
                <gender_map>
                    <!--
                        Map customer gender options to the Appropriate ROM Values.
                        Invalid mappings are ignored.
                        Currently ROM supports 'M' and 'F' as valid values.
                    -->
                    <Male>M</Male>
                    <Female>F</Female>
                </gender_map>
            </create>
            <cancel>
                <reason_map>
                    <!--
                    Map possible reasons for a customer to select from when canceling their order.
                    -->
                    <CWS>Wrong size or color</CWS>
                    <EP>Buyer's remorse</EP>
                    <YD>Duplicate order</YD>
                    <OTH>Other</OTH>
                </reason_map>
            </cancel>
        </ebayenterprise_order>
        <ebayenterprise_paypal>
            <url>
                <!-- logo image for category pages -->
                <logo_image_src>https://www.paypalobjects.com/{locale_code}/i/bnr/bnr_{logo_type}.gif</logo_image_src>
                <!-- paypal about page -->
                <logo_about_page_uri>https://www.paypal.com/{locale_code}/cgi-bin/webscr?cmd=xpt/Marketing/popup/OLCWhatIsPayPal-outside</logo_about_page_uri>
                <!-- checkout payment method option image -->
                <mark_image_src>https://www.paypalobjects.com/webstatic/{locale_code}/i/buttons/pp-acceptance-medium.png</mark_image_src>
                <!-- express checkout button on the product and cart pages -->
                <shortcut_express_checkout_button>https://www.paypalobjects.com/webstatic/{locale_code}/i/buttons/checkout-logo-medium.png</shortcut_express_checkout_button>
                <!-- What is PayPal link on express payment method in checkout -->
                <what_is_page_url>https://www.paypal.com/us/cgi-bin/webscr?cmd=xpt/Marketing/popup/OLCWhatIsPayPal-outside</what_is_page_url>
            </url>
        </ebayenterprise_paypal>
    </default>
</config>
