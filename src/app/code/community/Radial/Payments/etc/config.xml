<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2013-2014 eBay Enterprise, Inc.

NOTICE OF LICENSE

This source file is subject to the Open Software License (OSL 3.0)
that is bundled with this package in the file LICENSE.md.
It is also available through the world-wide-web at this URL:
http://opensource.org/licenses/osl-3.0.php

@copyright   Copyright (c) 2013-2014 eBay Enterprise, Inc. (http://www.ebayenterprise.com/)
@license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
-->
<config>
    <modules>
        <Radial_Payments>
            <version>1.0.2</version>
        </Radial_Payments>
    </modules>
    <global>
        <helpers>
            <radial_payments>
                <class>Radial_Payments_Helper</class>
            </radial_payments>
        </helpers>
        <models>
            <radial_payments>
                <class>Radial_Payments_Model</class>
            </radial_payments>
        </models>
	    <blocks>
            <radial_payments>
                <class>Radial_Payments_Block</class>
            </radial_payments>
        </blocks>
        <events>
            <core_block_abstract_to_html_before>
                <observers>
                    <radial_payments_capture_observer>
                        <type>model</type>
                        <class>radial_payments/observer</class>
                        <method>handleInvoiceViewEvent</method>
                    </radial_payments_capture_observer>
                </observers>
            </core_block_abstract_to_html_before>
            <radial_amqp_message_settlement_status>
                <observers>
                    <radial_creditcard_payments_settlements_status_observer>
                        <type>model</type>
                        <class>radial_payments/observer</class>
                        <method>handlePaymentSettlementsStatusEvent</method>
                    </radial_creditcard_payments_settlements_status_observer>
                </observers>
            </radial_amqp_message_settlement_status>
            <sales_order_payment_cancel>
                <observers>
                    <radial_payments_cancel>
                        <type>model</type>
                        <class>radial_payments/observer</class>
                        <method>processOrderCancel</method>
                    </radial_payments_cancel>
                </observers>
            </sales_order_payment_cancel>

            <!-- BOF: Automated Invoicing -->
            <radial_eb2cfraud_dispatch_fraud_accept>
                <observers>
                    <radial_invoicing_handle_fraud_accept>
                        <type>model</type>
                        <class>radial_payments/invoicing_observer</class>
                        <method>handleFraudAccept</method>
                    </radial_invoicing_handle_fraud_accept>
                </observers>
            </radial_eb2cfraud_dispatch_fraud_accept>
            <sales_order_shipment_save_after>
                <observers>
                    <radial_invoicing_handle_shipment_save>
                        <type>model</type>
                        <class>radial_payments/invoicing_observer</class>
                        <method>handleShipmentSave</method>
                    </radial_invoicing_handle_shipment_save>
                </observers>
            </sales_order_shipment_save_after>
            <!-- EOF: Automated Invoicing -->
	    <sales_order_invoice_save_after>
		<observers>
			<radial_invoicing_transfer_gw>
				<type>model</type>
				<class>radial_payments/observer</class>
				<method>transferRemainingGwPrices</method>
			</radial_invoicing_transfer_gw>
		</observers>
	    </sales_order_invoice_save_after>
	     <sales_order_creditmemo_save_after>
                <observers>
                        <radial_creditmemo_transfer_gw>
                                <type>model</type>
                                <class>radial_payments/observer</class>
                                <method>transferRemainingGwPricesCreditMemo</method>
                        </radial_creditmemo_transfer_gw>
                </observers>
            </sales_order_creditmemo_save_after>
        </events>
	    <resources>
            <radial_payments_setup>
                <setup>
                    <module>Radial_Payments</module>
                    <class>Mage_Sales_Model_Resource_Setup</class>
                </setup>
            </radial_payments_setup>
        </resources>
	    <template>
                <email>
                        <custom_email_template2 module="Payments">
                               <label>Radial - Payments Exception Report</label>
                                <file>payments_exception_template.html</file>
                                <type>html</type>
                        </custom_email_template2>
                </email>
        </template>
    </global>
    <admin>
        <routers>
            <adminhtml>
                <args>
                    <modules>
                        <radial_payments before="Mage_Adminhtml">Radial_Payments_Adminhtml</radial_payments>
                    </modules>
                </args>
            </adminhtml>
	        <admin>
                <use>admin</use>
                <args>
                    <frontName>radial_payments</frontName>
                    <module>Radial_Payments_Adminhtml</module>
                </args>
            </admin>
        </routers>
    </admin>
    <crontab>
        <jobs>
            <radial_payments_retry_settlements>
                <schedule><cron_expr>*/5 * * * *</cron_expr></schedule>
                <run><model>radial_payments/cron::retrySettlements</model></run>
            </radial_payments_retry_settlements>
        </jobs>
    </crontab>
    <default>
	    <radial_core>
            <payments>
                <maxretries>3</maxretries>
                <responsetimeout>20000</responsetimeout>
            </payments>
        </radial_core>
    </default>
</config>
